stages:
  - test
  - build

tests:
  stage: test
  image: node:16
  variables:
    REDIS_URL: redis://localhost:6379
    REDIS_CHANNEL: broadcasthub
    AUTH_TIMEOUT: 5000
    WS_PORT: 80
    ENABLE_MULTITENANCY_MODE: 'false'
    TINE20_JSON_API_URL: http://localhost:4000
    # Pattern gets anchored in the code
    TINE20_JSON_API_URL_PATTERN: (http://localhost:4000)|(http://tenant(1|2|3).my-domain.test:4000)
    DEBUG_DEFAULT_LOGGING: "off"
    DEBUG_LOG_TO_FILE: "off"
    DEBUG_LOG_FILE: ../../stdout.log
    TEST_INTEGRATION_WS_URL: ws://localhost:80
    TEST_E2E_WS_URL: ws://localhost:80
  cache:
    paths:
    - node_modules/
  script:
   - npm install
   - npm run-script integrationtest

build:
  stage: build
  tags:
    - docker
    - privileged
  image: docker:20.10.11
  variables:
    # When you use the dind service, you must instruct Docker to talk with
    # the daemon started inside of the service. The daemon is available
    # with a network connection instead of the default
    # /var/run/docker.sock socket. Docker 19.03 does this automatically
    # by setting the DOCKER_HOST in
    # https://github.com/docker-library/docker/blob/d45051476babc297257df490d22cbd806f1b11e4/19.03/docker-entrypoint.sh#L23-L29
    #
    # The 'docker' hostname is the alias of the service container as described at
    # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
    #
    # Specify to Docker where to create the certificates. Docker
    # creates them automatically on boot, and creates
    # `/certs/client` to share between the service and job
    # container, thanks to volume mount from config.toml

    # Configuration for shared Gitlab runner in Metaways Gitlab
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20.10.11-dind
      alias: docker
      command: ["--tls=false"]
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - docker info
  script:
    - /bin/sh build/ci_build_image.sh
    - /bin/sh build/ci_publish_image.sh
